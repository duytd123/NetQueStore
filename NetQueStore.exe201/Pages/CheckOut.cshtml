@page
@model NetQueStore.exe201.Pages.CheckOutModel
@{
    ViewData["Title"] = "Checkout";
}
@await Html.PartialAsync("_CheckoutSteps")

<div class="container mt-4">
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success mt-3 alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger mt-3 alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- COUPON SECTION -->
    <div class="mb-4">
        <a href="#" id="toggleCoupon" class="text-success d-block fw-semibold">
            Bạn có mã người giới thiệu không? Ấn vào đây để nhập mã
        </a>
        <div id="couponForm" class="mt-2 p-3 border border-success" style="display: none;">
            <input type="text" id="referrerPhoneInput" class="form-control mb-2" placeholder="Nhập số điện thoại người giới thiệu (10 chữ số)" maxlength="10" />
            <div id="referrerPhoneMessage" class="mt-2" style="display: none;"></div>
            <button type="button" id="applyReferrerPhone" class="btn btn-success">ÁP DỤNG SDT NGƯỜI GIỚI THIỆU</button>
        </div>
    </div>

    <form method="post" id="checkoutForm" asp-page="/Checkout">
        @Html.AntiForgeryToken()
        <input type="hidden" id="ReferrerPhone" asp-for="ReferrerPhone" />
        <div class="row">
            <!-- Left: Billing -->
            <div class="col-md-7">
                <h5 class="mb-3">CHI TIẾT THANH TOÁN</h5>
                <div class="mb-3">
                    <label class="form-label">Họ tên *</label>
                    <input asp-for="FullName" class="form-control" />
                    <span asp-validation-for="FullName" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label class="form-label">Địa chỉ *</label>
                    <input asp-for="Address" class="form-control" />
                    <span asp-validation-for="Address" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label class="form-label">Số điện thoại *</label>
                    <input asp-for="Phone" class="form-control" />
                    <span asp-validation-for="Phone" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label class="form-label">Email</label>
                    <input asp-for="Email" class="form-control" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <input class="form-control" placeholder="Ghi rõ địa chỉ giao hàng…" asp-for="Notes" />
                </div>
            </div>
            <!-- Right: Order Summary -->
            <div class="col-md-5">
                <div class="border p-3">
                    <h5 class="mb-3">Đơn hàng</h5>
                    <div class="mb-3">
                        @foreach (var item in Model.ListOrderItems)
                        {
                            <div class="d-flex justify-content-between">
                                @{
                                    var quantity = Model.FoodQuantities[item.Id];
                                    var hasSale = item.SalePrice.HasValue && item.SalePrice.Value < item.Price;
                                    var unitPrice = hasSale ? item.SalePrice.Value : item.Price;
                                }
                                <span>
                                    Sản phẩm: @item.Name × @quantity <br />
                                    @if (hasSale)
                                    {
                                        <span class="text-success fw-bold">@unitPrice.ToString("N0")₫</span>
                                        <small class="text-danger text-decoration-line-through ms-1">@item.Price.ToString("N0")₫</small>
                                    }
                                    else
                                    {
                                        <span class="text-success fw-bold">@unitPrice.ToString("N0")₫</span>
                                    }
                                </span>
                            </div>
                        }
                    </div>
                    <hr />
                    <div class="mb-2">
                        <div class="d-flex justify-content-between">
                            <strong>Tạm tính:</strong>
                            <span>@String.Format("{0:N0}₫", Model.Subtotal)</span>
                        </div>
                        <div class="d-flex justify-content-between">
                            <strong>Phí Ship:</strong>
                            <span>@String.Format("{0:N0}₫", Model.ShippingFee)</span>
                        </div>
                        <div class="d-flex justify-content-between fw-bold">
                            <strong>Tổng thanh toán:</strong>
                            <span>@String.Format("{0:N0}₫", Model.Total)</span>
                        </div>
                    </div>
                    <hr />
                    <div class="mb-3">
                        @foreach (var method in Model.PaymentMethods)
                        {
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="PaymentMethodId" id="paymentMethod_@method.Id" value="@method.Id"
                                @(Model.PaymentMethodId == method.Id ? "checked" : "") />
                                <label class="form-check-label fw-semibold" for="paymentMethod_@method.Id">@method.Code</label>
                            </div>
                            @if (!string.IsNullOrWhiteSpace(method.Instructions))
                            {
                                <div class="text-muted ms-4 mb-2" style="font-size: 0.9em;">
                                    @method.Instructions
                                </div>
                            }
                        }
                        <span asp-validation-for="PaymentMethodId" class="text-danger"></span>
                    </div>
                    <button type="submit" class="btn btn-success w-100 mt-2" id="placeOrderButton">ĐẶT HÀNG</button>
                    <p class="text-muted small mt-2">
                        Dữ liệu cá nhân của bạn sẽ được sử dụng để xử lý đơn hàng của bạn, hỗ trợ trải nghiệm của bạn trên toàn bộ trang web này và cho các mục đích khác được mô tả trong chính sách bảo mật của chúng tôi.
                    </p>
                    <div id="form-error" class="text-danger mt-2" style="display: none;"></div>
                </div>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            // Toggle coupon form
            $("#toggleCoupon").click(function (e) {
                e.preventDefault();
                const form = $("#couponForm");
                form.slideToggle();
                $("#referrerPhoneMessage").hide();
            });

            // Apply referrer phone
            $("#applyReferrerPhone").click(function () {
                const referrerPhone = $("#referrerPhoneInput").val().trim();
                const messageDiv = $("#referrerPhoneMessage");

                if (!referrerPhone) {
                    messageDiv.removeClass("alert-success").addClass("alert-danger")
                        .text("Vui lòng nhập số điện thoại người giới thiệu.")
                        .show();
                    return;
                }

                if (!/^[0][3|5|7|8|9][0-9]{8}$/.test(referrerPhone)) {
                    messageDiv.removeClass("alert-success").addClass("alert-danger")
                        .text("Số điện thoại không hợp lệ. Vui lòng nhập 10 chữ số, bắt đầu bằng 03, 05, 07, 08 hoặc 09.")
                        .show();
                    return;
                }

                $("#ReferrerPhone").val(referrerPhone);
                messageDiv.removeClass("alert-danger").addClass("alert-success")
                    .text("Số điện thoại người giới thiệu đã được áp dụng thành công!")
                    .show();

                setTimeout(() => {
                    messageDiv.fadeOut();
                }, 3000);
            });

            $("#referrerPhoneInput").on("input", function () {
                $("#referrerPhoneMessage").hide();
            });

            // Auto-hide alerts
            setTimeout(() => {
                $('.alert').not('#referrerPhoneMessage').fadeOut('slow', function () { $(this).remove(); });
            }, 5000);

            // Form submission with AJAX
            $('#checkoutForm').on('submit', function (e) {
                e.preventDefault();
                var form = $(this);
                var button = $('#placeOrderButton');
                var errorDiv = $('#form-error');

                errorDiv.hide();
                button.prop('disabled', true).text('Đang xử lý...');

                $.ajax({
                    url: form.attr('action'),
                    method: 'POST',
                    data: form.serialize(),
                    headers: {
                        'RequestVerificationToken': form.find('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (response) {
                        console.log('Checkout response:', response);
                        if (response.success && response.redirectUrl) {
                            window.location.href = response.redirectUrl;
                        } else {
                            errorDiv.text(response.message || 'Lỗi không xác định khi đặt hàng.').show();
                            button.prop('disabled', false).text('ĐẶT HÀNG');
                        }
                    },
                    error: function (xhr) {
                        console.error('Checkout error:', xhr);
                        var errorMessage = xhr.responseJSON?.message || xhr.responseText || 'Lỗi khi đặt hàng, vui lòng thử lại.';
                        errorDiv.text(errorMessage).show();
                        button.prop('disabled', false).text('ĐẶT HÀNG');
                    },
                    complete: function () {
                        button.prop('disabled', false).text('ĐẶT HÀNG');
                    }
                });
            });
        });
    </script>
}
